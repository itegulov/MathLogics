package ru.ifmo.ctddev.itegulov.rules;

import ru.ifmo.ctddev.itegulov.proof.Proof;
import ru.ifmo.ctddev.itegulov.structure.FormalArithmeticExpression;
import ru.ifmo.ctddev.itegulov.structure.predicate.ForAll;
import ru.ifmo.ctddev.itegulov.structure.predicate.Term;
import ru.ifmo.ctddev.itegulov.structure.predicatelogic.PAnd;
import ru.ifmo.ctddev.itegulov.structure.predicatelogic.PEntailment;

public class ForAllRule {
    public static void addForAllProof(FormalArithmeticExpression alpha, FormalArithmeticExpression e,
                                      FormalArithmeticExpression e1, Term variable, Proof<FormalArithmeticExpression> proof) {
        proof.addExpression(new PEntailment(new PAnd(alpha, e), alpha), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), alpha)), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha))), null);
        proof.addExpression(new PEntailment(new PAnd(alpha, e), e), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e)), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e))), null);
        proof.addExpression(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PAnd(alpha, e))), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PAnd(alpha, e), alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PAnd(alpha, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PAnd(alpha, e), e))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(alpha, new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1)))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(alpha, new PEntailment(e, e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(alpha, new PEntailment(e, e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), alpha)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), alpha), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1)))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(alpha, new PEntailment(e, e1))), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), e), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1))), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))), new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e1)), new PEntailment(new PAnd(alpha, e), e1)), null);
        proof.addExpression(new PEntailment(new PAnd(alpha, e), e1), null);
        proof.addExpression(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(alpha, alpha)), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, alpha))), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, alpha))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, alpha), alpha)), new PEntailment(alpha, alpha))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, alpha)), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(e, alpha)), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(alpha, new PEntailment(e, alpha)))), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(e, alpha)), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha))), null);
        proof.addExpression(new PEntailment(e, new PEntailment(e, e)), null);
        proof.addExpression(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(e, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), null);
        proof.addExpression(new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), null);
        proof.addExpression(new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, e)), new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PEntailment(e, e), e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PEntailment(e, e), e)), new PEntailment(e, e))), new PEntailment(alpha, new PEntailment(e, e)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, e))), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, alpha))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, alpha)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, alpha), new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, e)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, e)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, e))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, e)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, e), new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, alpha)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, alpha), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e)))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PAnd(alpha, e))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PAnd(alpha, e)), new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)))), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1)))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1)))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(new PEntailment(alpha, new PEntailment(new PEntailment(e, new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1))), new PEntailment(e, new ForAll(variable,e1)))), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))), new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))))), null);
        proof.addExpression(new PEntailment(new PEntailment(new PAnd(alpha, e), new ForAll(variable,e1)), new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1)))), null);
        proof.addExpression(new PEntailment(alpha, new PEntailment(e, new ForAll(variable,e1))), null);
    }
}
